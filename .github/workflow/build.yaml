name: Build & Release Go Plugin

on:
  push:
    tags:
      - '*'  # 只有打 tag 才触发 Release
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, macos]
        arch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install dependencies (Linux/Windows cross-compiling)
        if: matrix.os != 'macos'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential zip

      - name: Create build directory
        run: mkdir -p build/${{ matrix.os }}/${{ matrix.arch }}

      - name: Build plugin
        run: |
          PLUGIN_NAME="plugin"
          SRC_FILE="plugin.go"
          OUT_DIR="build/${{ matrix.os }}/${{ matrix.arch }}"
          if [[ "${{ matrix.os }}" == "macos" ]]; then
            EXT="dylib"
          elif [[ "${{ matrix.os }}" == "windows" ]]; then
            EXT="dll"
          else
            EXT="so"
          fi
          CGO_ENABLED=1 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -buildmode=c-shared -o "$OUT_DIR/${PLUGIN_NAME}.${EXT}" "$SRC_FILE"

      - name: List build artifacts
        run: ls -R build

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Zip build directory
        run: |
          zip -r build.zip build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
